<div class="container">
    <!-- LEFT SIDE -->
    <div class="left-panel">
        <div class="logo">
            <img src="/images/Buksu-Logo.png" alt="BukSU Logo">
        </div>
        <p class="tagline">Educate. Innovate. Lead.</p>
    </div>

    <!-- RIGHT SIDE -->
    <div class="right-panel">
        <div class="layer layer1"></div>
        <div class="layer layer2"></div>
        <div class="layer layer3"></div>

        <!-- Login Form Card -->
        <div class="login-card hidden" id="loginCard">
            <img src="/images/memofy-logo.png" alt="Logo Icon" class="small-logo">
            <h2>Login to your Account</h2>
            <p class="welcome">Welcome back! Please login to continue.</p>

            <form id="loginForm" method="POST" action="/auth/login">
                <div class="input-group">
                    <img src="/images/email.png" alt="Email Icon" class="input-icon">
                    <input type="email" name="email" placeholder="Email" required>
                </div>
                <div class="input-group">
                    <img src="/images/padlock.png" alt="Password Icon" class="input-icon">
                    <input type="password" name="password" id="passwordInput" placeholder="Password" required>
                </div>
                <div id="recaptchaContainer" style="display: none; margin: 15px 0; text-align: center;">
                    <div id="recaptcha" class="g-recaptcha"
                        data-sitekey="<%= RECAPTCHA_SITE_KEY %>"
                        data-callback="enableSubmit"
                        data-expired-callback="disableSubmit"
                        data-theme="light"
                        style="display: inline-block;">
                    </div>
                    <p style="color: #666; font-size: 13px; margin-top: 8px;">Please complete the reCAPTCHA to continue</p>
                </div>
                <button type="submit" class="login-btn" id="loginButton" disabled>Login</button>

                <div class="forgot-password-link">
                    <a href="/forgot-password" id="forgotPasswordLink">Forgot
                        Password?</a>
                </div>

                <div class="divider">or</div>
            </form>

            <div id="google-signin-button" class="google-signin-container">
                <!-- Placeholder: real button is injected by /js/google-auth-modal.js -->
                <div style="text-align:center; color:#666; font-size:14px; padding:12px 0;">Loading Google Sign-In…</div>
            </div>

            <!-- reCAPTCHA v2 Checkbox for Google sign-in guard -->
            <div id="googleRecaptchaSection" style="margin-top: 10px; text-align:center;">
                <div id="googleRecaptchaContainer" data-sitekey="<%= RECAPTCHA_SITE_KEY %>"></div>
                <div id="googleRecaptchaHint" style="color:#666; font-size:12px; margin-top:6px; display:none;">Please complete the reCAPTCHA before continuing</div>
            </div>
        </div>
    </div>
</div>

<!-- Forgot Password Modal -->
<div id="forgotPasswordModal" class="forgot-modal" style="display: none;">
    <div class="forgot-modal-content">
        <div class="forgot-modal-header">
            <div class="forgot-logo-section">
                <img src="/images/memofy-logo.png" alt="Logo" class="forgot-small-logo">
                <span class="forgot-title">Reset Your Password</span>
            </div>
            <button id="closeForgotModal" class="close-forgot-modal">&times;</button>
        </div>
        <div class="forgot-modal-body">
            <h2 class="forgot-heading">Reset Your Password</h2>
            <p class="forgot-subtitle">Enter your email to receive a reset link.</p>

            <form id="forgotForm">
                <div class="input-group">
                    <img src="/images/email.png" alt="Email Icon" class="input-icon">
                    <input type="email" name="email" placeholder="Email" required>
                </div>
                <button type="submit" class="login-btn">Send Reset Link</button>
            </form>

            <div class="forgot-back-link">
                <a href="javascript:void(0)" onclick="closeForgotPasswordModal()">← Back to Login</a>
            </div>
        </div>
    </div>
</div>

<!-- Reset Code Modal -->
<div id="resetCodeModal" class="forgot-modal" style="display: none;">
    <div class="forgot-modal-content">
        <div class="forgot-modal-header">
            <div class="forgot-logo-section">
                <img src="/images/memofy-logo.png" alt="Logo" class="forgot-small-logo">
                <span class="forgot-title">Enter Reset Code</span>
            </div>
            <button id="closeResetCodeModal" class="close-forgot-modal">&times;</button>
        </div>
        <div class="forgot-modal-body">
            <h2 class="forgot-heading">Password Reset Code</h2>
            <p class="forgot-subtitle">Enter the reset code sent to your email.</p>

            <form id="resetCodeForm">
                <div class="input-group">
                    <img src="/images/recycle.png" alt="Code Icon" class="input-icon">
                    <input type="text" name="resetCode" placeholder="Enter Reset Code" required>
                </div>
                <button type="submit" class="login-btn">Verify Code</button>
            </form>

            <div class="forgot-back-link">
                <a href="javascript:void(0)" onclick="showForgotPasswordModal()">← Back to Email</a>
            </div>
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div id="resetPasswordModal" class="forgot-modal" style="display: none;">
    <div class="forgot-modal-content">
        <div class="forgot-modal-header">
            <div class="forgot-logo-section">
                <img src="/images/memofy-logo.png" alt="Logo" class="forgot-small-logo">
                <span class="forgot-title">Set New Password</span>
            </div>
            <button id="closeResetPasswordModal" class="close-forgot-modal">&times;</button>
        </div>
        <div class="forgot-modal-body">
            <h2 class="forgot-heading">Set New Password</h2>
            <p class="forgot-subtitle">Enter your new password below.</p>

            <form id="resetPasswordForm">
                <div class="input-group">
                    <img src="/images/unlock.png" alt="Password Icon" class="input-icon">
                    <input type="password" name="newPassword" placeholder="New Password" required>
                </div>
                <div class="input-group">
                    <img src="/images/recycle.png" alt="Confirm Password Icon" class="input-icon">
                    <input type="password" name="confirmPassword" placeholder="Confirm Password" required>
                </div>
                <button type="submit" class="login-btn">Reset Password</button>
            </form>

            <div class="forgot-back-link">
                <a href="javascript:void(0)" onclick="showResetCodeModal()">← Back to Code</a>
            </div>
        </div>
    </div>
</div>

<!-- Account Lockout Modal -->
<div id="accountLockoutModal" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <div class="modal-logo-section">
                <img src="/images/memofy-logo.png" alt="Memofy Logo" class="modal-logo">
                <span class="modal-title">Account Locked</span>
            </div>
            <span class="close" id="closeLockoutModal">&times;</span>
        </div>
        <div class="modal-body">
            <div class="lockout-icon">
                <svg width="64" height="64" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M18 8H17V6C17 3.24 14.76 1 12 1S7 3.24 7 6V8H6C4.9 8 4 8.9 4 10V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V10C20 8.9 19.1 8 18 8ZM12 17C10.9 17 10 16.1 10 15S10.9 13 12 13S14 13.9 14 15S13.1 17 12 17ZM15.1 8H8.9V6C8.9 4.29 10.29 2.9 12 2.9S15.1 4.29 15.1 6V8Z" fill="#ff6b6b"/>
                </svg>
            </div>
            <h2 class="lockout-title">Account Temporarily Locked</h2>
            <p class="lockout-message" id="lockoutMessage">
                Account is temporarily locked due to too many failed login attempts.
            </p>
            <div class="lockout-timer">
                <div class="timer-circle">
                    <svg width="120" height="120" viewBox="0 0 120 120">
                        <circle cx="60" cy="60" r="50" stroke="#e0e0e0" stroke-width="8" fill="none"/>
                        <circle cx="60" cy="60" r="50" stroke="#1E92F3" stroke-width="8" fill="#1E92F3"
                                stroke-dasharray="314" stroke-dashoffset="314" transform="rotate(-90 60 60)"/>
                    </svg>
                    <div class="timer-text">
                        <span id="timerMinutes">0</span>
                        <span class="timer-label">MIN</span>
                    </div>
                </div>
            </div>
            <p class="lockout-instruction">
                Please wait for the timer to complete before attempting to login again.
            </p>
            <div class="lockout-actions">
                <button type="button" class="btn-secondary" onclick="closeAccountLockoutModal()">Close</button>
                <button type="button" class="btn-primary" onclick="window.location.href='/forgot-password'">Forgot Password?</button>
            </div>
        </div>
    </div>
</div>

<!-- Generic Message Modal -->
<div id="messageModal" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <div class="modal-logo-section">
                <img src="/images/memofy-logo.png" alt="Memofy Logo" class="modal-logo">
                <span class="modal-title" id="messageModalTitle">Message</span>
            </div>
            <span class="close" id="closeMessageModal">&times;</span>
        </div>
        <div class="modal-body">
            <div class="message-icon" id="messageIcon">
                <!-- Icon will be set dynamically -->
            </div>
            <p class="message-text" id="messageText">
                <!-- Message will be set dynamically -->
            </p>
            <div class="message-actions">
                <button type="button" class="btn-primary" onclick="closeMessageModal()">OK</button>
            </div>
        </div>
    </div>
</div>

<script src="/js/password-setup.js"></script>
<script src="/js/forgot-password-modal.js"></script>
<script src="/js/google-auth-modal.js"></script>
<script src="/js/account-lockout-modal.js"></script>
<script src="/js/message-modal.js"></script>

<!-- Google reCAPTCHA -->
<script src="https://www.google.com/recaptcha/api.js" async defer></script>

<script src="/js/login-form.js"></script>

<!-- Google Identity Services -->
<script src="https://accounts.google.com/gsi/client" async defer></script>

<!-- Global message listener for Google OAuth popup -->
<script>
/**
 * Global message listener for Google OAuth authentication
 *
 * FLOW:
 * 1. Popup opens for Google authentication
 * 2. User authenticates with Google
 * 3. Backend renders google-callback.ejs in popup
 * 4. Callback sends GOOGLE_AUTH_SUCCESS message via postMessage
 * 5. Popup closes
 * 6. This listener receives message and loads dashboard dynamically
 * 7. Login page is replaced with dashboard content - NO redirect
 */
// Global flag to track authentication completion
window.googleAuthCompleted = false;
let googleAuthPoller = null;

// Robust popup closer used by both message and storage flows
function closeAuthPopupRobust() {
    try {
        if (window.authPopup && !window.authPopup.closed) {
            console.log('🔒 Attempting to close popup (direct)...');
            try { window.authPopup.focus(); } catch (e) {}
            try { window.authPopup.close(); } catch (e) {}

            let attempts = 0;
            const closer = setInterval(() => {
                attempts++;
                if (!window.authPopup || window.authPopup.closed || attempts > 20) {
                    clearInterval(closer);
                    return;
                }
                try { window.authPopup.focus(); } catch (e) {}
                try { window.authPopup.close(); } catch (e) {}
                // If still not closing, navigate popup to self-closing callback page (same-origin)
                try { window.authPopup.location.href = '/auth/google/callback-page'; } catch (e) {}
                // Some browsers only allow closing about:blank windows
                try { window.authPopup.location.replace('about:blank'); } catch (e) {}
                // As a fallback, push popup behind and off-screen
                try { window.focus(); } catch (e) {}
                try { window.authPopup.blur(); } catch (e) {}
                try { window.authPopup.moveTo(-10000, 0); } catch (e) {}
                try { window.authPopup.resizeTo(1, 1); } catch (e) {}
            }, 150);
        }
    } catch (err) {
        // ignore
    }
}

window.addEventListener('message', async (event) => {
    console.log('📨 Message received from:', event.origin);
    console.log('📨 Message type:', event.data?.type);

    // Security: Only accept messages from same origin
    const expectedOrigin = window.location.origin;
    if (event.origin !== expectedOrigin) {
        console.log('⚠️ Ignoring message from different origin');
        return;
    }

    // Handle authentication success message from popup
    if (event.data?.type === 'GOOGLE_AUTH_SUCCESS') {
        console.log('✅ GOOGLE_AUTH_SUCCESS received from popup!');
        console.log('🚀 Loading dashboard dynamically...');

        // Set completion flag so popup monitor knows auth succeeded
        window.googleAuthCompleted = true;

        try {
            // Step 1: Get current user info from backend
            console.log('📡 Fetching user info from /auth/current-user...');
            const res = await fetch('/auth/current-user', {
                credentials: 'include'
            });

            if (!res.ok) {
                throw new Error('Failed to get user info: ' + res.status);
            }

            const user = await res.json();
            console.log('✅ User authenticated:', user.user?.email, '| Role:', user.user?.role);

            // Step 2: Determine which dashboard to load based on role
            let dashboardUrl = '/admin-dashboard';
            if (user.user?.role === 'secretary' || user.user?.role === 'faculty') {
                dashboardUrl = '/dashboard';
            }

            // Close popup first, then wait briefly for it to close before redirecting
            closeAuthPopupRobust();
            let waited = 0;
            while (window.authPopup && !window.authPopup.closed && waited < 1500) {
                await new Promise(r => setTimeout(r, 100));
                waited += 100;
                try { if (window.authPopup) { window.authPopup.close(); } } catch (e) {}
            }

            console.log('➡️ Redirecting parent to:', dashboardUrl);
            window.location.href = dashboardUrl;

        } catch (error) {
            console.error('❌ Error loading dashboard:', error);
            alert('Failed to load dashboard. Redirecting as fallback...');
            // Fallback: redirect if dynamic loading fails
            window.location.href = '/admin-dashboard';
        }
    }
});

// Storage fallback listener: if popup couldn't access window.opener, it will set a flag
window.addEventListener('storage', async (e) => {
    if (e.key === 'GOOGLE_AUTH_SUCCESS' && e.newValue === '1') {
        console.log('✅ GOOGLE_AUTH_SUCCESS detected via localStorage');
        try { localStorage.removeItem('GOOGLE_AUTH_SUCCESS'); } catch (err) { /* ignore */ }
        // Defer to allow session cookies to settle
        setTimeout(async () => {
            closeAuthPopupRobust();
            try {
                console.log('📡 [storage] Fetching user info from /auth/current-user...');
                const res = await fetch('/auth/current-user', { credentials: 'include' });
                const data = await res.json();
                if (!res.ok || !data.success) {
                    throw new Error('User not authenticated');
                }
                let dashboardUrl = '/admin-dashboard';
                if (data.user?.role === 'secretary' || data.user?.role === 'faculty') {
                    dashboardUrl = '/dashboard';
                }
                console.log('➡️ [storage] Redirecting parent to:', dashboardUrl);
                window.location.href = dashboardUrl;
            } catch (err2) {
                console.log('⚠️ [storage] Falling back to admin-dashboard due to error:', err2?.message);
                window.location.href = '/admin-dashboard';
            }
        }, 200);
    }
});

// Polling fallback: after popup opens, periodically check auth and redirect parent
function startGoogleAuthPoller() {
    if (googleAuthPoller) return;
    let elapsed = 0;
    googleAuthPoller = setInterval(async () => {
        elapsed += 700;
        try {
            if (window.authPopup) {
                const res = await fetch('/auth/current-user', { credentials: 'include' });
                const data = await res.json();
                if (res.ok && data && data.success) {
                    let dashboardUrl = '/admin-dashboard';
                    if (data.user?.role === 'secretary' || data.user?.role === 'faculty') {
                        dashboardUrl = '/dashboard';
                    }
                    clearInterval(googleAuthPoller);
                    googleAuthPoller = null;
                    try { closeAuthPopupRobust(); } catch (e) {}
                    window.location.href = dashboardUrl;
                }
            }
        } catch (e) {
            // ignore and continue polling
        }
        if (elapsed >= 15000) {
            clearInterval(googleAuthPoller);
            googleAuthPoller = null;
        }
    }, 700);
}

// If the popup API set window.authPopup, begin polling
setInterval(() => {
    if (window.authPopup && !googleAuthPoller) {
        startGoogleAuthPoller();
    }
}, 500);
</script>

<!-- Trigger message modal for invalid or expired links -->
<% if (typeof showMessageModal !== 'undefined' && showMessageModal) { %>
<script>
document.addEventListener('DOMContentLoaded', function() {
	if (window.showMessageModal) {
		window.showMessageModal('<%= modalTitle || "Invalid Link" %>', '<%= modalMessage || "Link is not valid any more" %>', '<%= modalType || "error" %>');
	} else {
		alert('<%= modalMessage || "Link is not valid any more" %>');
	}
});
</script>
<% } %>
